####################
#  User Interface  #
####################
- has a preview section to watch images be progressively combined
    (get an image's pixel values, add it to the blur and average it)
    - equation for progressive combining (need to account for already being averaged)
        def progressiveAverage(int numElems, double currentAverage, double numToAdd) {
            double unaveragedValue;
            double newAverage;

            unaveragedValue = numElems * currentAverage; // undo the average
            newAverage = (unaveragedValue + numToAdd) / (numElems + 1);

            return (newAverage);
        }
    - have a cancel button to stop the blur if it is not what you wanted (need to tweak some values)
- text input for adjusting brightness, contrast, color, blur, etc.
- yes/no for things like inverting colors
- browse to find file with images
- new file will be saved to same directory in a subdirectory called <filename>_blurs
- choose the image format (jpg, png, whatever...) -- maybe radio buttons

- later on, can have regular blur (uses averages), dark/light blur (uses max/min) so that dark or light elements are emphasized

